/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CredentialRequest', 'model/IssuerCreateAndStoreCredentialDefResult', 'model/IssuerCreateCredentialResult', 'model/ModelAndView', 'model/ProverCreateCredentialRequestResult', 'model/View', 'model/Wallet', 'api/BasicErrorControllerApi', 'api/IssuerControllerApi', 'api/ProofControllerApi', 'api/ProverControllerApi', 'api/VerifierControllerApi', 'api/WalletControllerApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/CredentialRequest'), require('./model/IssuerCreateAndStoreCredentialDefResult'), require('./model/IssuerCreateCredentialResult'), require('./model/ModelAndView'), require('./model/ProverCreateCredentialRequestResult'), require('./model/View'), require('./model/Wallet'), require('./api/BasicErrorControllerApi'), require('./api/IssuerControllerApi'), require('./api/ProofControllerApi'), require('./api/ProverControllerApi'), require('./api/VerifierControllerApi'), require('./api/WalletControllerApi'));
  }
}(function(ApiClient, CredentialRequest, IssuerCreateAndStoreCredentialDefResult, IssuerCreateCredentialResult, ModelAndView, ProverCreateCredentialRequestResult, View, Wallet, BasicErrorControllerApi, IssuerControllerApi, ProofControllerApi, ProverControllerApi, VerifierControllerApi, WalletControllerApi) {
  'use strict';

  /**
   * Api_Documentation.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ApiDocumentation = require('index'); // See note below*.
   * var xxxSvc = new ApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ApiDocumentation.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ApiDocumentation.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The CredentialRequest model constructor.
     * @property {module:model/CredentialRequest}
     */
    CredentialRequest: CredentialRequest,
    /**
     * The IssuerCreateAndStoreCredentialDefResult model constructor.
     * @property {module:model/IssuerCreateAndStoreCredentialDefResult}
     */
    IssuerCreateAndStoreCredentialDefResult: IssuerCreateAndStoreCredentialDefResult,
    /**
     * The IssuerCreateCredentialResult model constructor.
     * @property {module:model/IssuerCreateCredentialResult}
     */
    IssuerCreateCredentialResult: IssuerCreateCredentialResult,
    /**
     * The ModelAndView model constructor.
     * @property {module:model/ModelAndView}
     */
    ModelAndView: ModelAndView,
    /**
     * The ProverCreateCredentialRequestResult model constructor.
     * @property {module:model/ProverCreateCredentialRequestResult}
     */
    ProverCreateCredentialRequestResult: ProverCreateCredentialRequestResult,
    /**
     * The View model constructor.
     * @property {module:model/View}
     */
    View: View,
    /**
     * The Wallet model constructor.
     * @property {module:model/Wallet}
     */
    Wallet: Wallet,
    /**
     * The BasicErrorControllerApi service constructor.
     * @property {module:api/BasicErrorControllerApi}
     */
    BasicErrorControllerApi: BasicErrorControllerApi,
    /**
     * The IssuerControllerApi service constructor.
     * @property {module:api/IssuerControllerApi}
     */
    IssuerControllerApi: IssuerControllerApi,
    /**
     * The ProofControllerApi service constructor.
     * @property {module:api/ProofControllerApi}
     */
    ProofControllerApi: ProofControllerApi,
    /**
     * The ProverControllerApi service constructor.
     * @property {module:api/ProverControllerApi}
     */
    ProverControllerApi: ProverControllerApi,
    /**
     * The VerifierControllerApi service constructor.
     * @property {module:api/VerifierControllerApi}
     */
    VerifierControllerApi: VerifierControllerApi,
    /**
     * The WalletControllerApi service constructor.
     * @property {module:api/WalletControllerApi}
     */
    WalletControllerApi: WalletControllerApi
  };

  return exports;
}));
